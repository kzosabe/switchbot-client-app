name: Build App Executables
on:
  push:
    tags:
      - v*

jobs:
  windows-build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.9.10"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: build
        run: poetry run pyinstaller --onefile --name="switchbot-client-app" --windowed switchbot_client_app/main.py

      - name: upload
        uses: actions/upload-artifact@v2.3.1
        with:
          name: windows-executable
          path: dist/switchbot-client-app.exe

  mac-build:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.9.10"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: build
        run: poetry run pyinstaller --onefile --name="switchbot-client-app" --windowed switchbot_client_app/main.py && hdiutil create dist/SwitchBotClientApp.dmg -srcfolder dist/switchbot-client-app.app -ov

      - name: upload
        uses: actions/upload-artifact@v2.3.1
        with:
          name: mac-executable
          path: dist/switchbot-client-app.app

  release:
    needs: [windows-build, mac-build]
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows App
        uses: actions/download-artifact@v2.1.0
        with:
          name: windows-executable

      - name: Download Mac App
        uses: actions/download-artifact@v2.1.0
        with:
          name: mac-executable

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Zip
        run: zip --junk-paths windows-executable ./windows-executable/switchbot-client-app.exe

      - name: Append Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-executable.zip
          asset_name: windows-executable.zip
          asset_content_type: application/zip

      - name: Append Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mac-executable/switchbot-client-app.app
          asset_name: SwitchbotClientApp.dmg
          asset_content_type: application/octet-stream
